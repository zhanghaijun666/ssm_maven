<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.UsersMapper">
	<resultMap id="UserResultMap" type="com.model.Users">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="full_name" property="fullName"
			jdbcType="VARCHAR" />
		<result column="sex" property="sex" jdbcType="VARCHAR" />
		<result column="birthday" property="birthday"
			jdbcType="VARCHAR" />
		<result column="password" property="password"
			jdbcType="VARCHAR" />
		<result column="level" property="level" jdbcType="INTEGER" />
		<result column="state" property="state" jdbcType="INTEGER" />
		<result column="des" property="des" jdbcType="VARCHAR" />
		<result column="tel" property="tel" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="creat_time" property="creatTime"
			jdbcType="TIMESTAMP" />
		<result column="last_time" property="lastTime"
			jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, name, full_name, sex, birthday, password, level, state,
		des, tel,
		email, creat_time,
		last_time
	</sql>
	<select id="getUserById" resultMap="UserResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="getAllUser" resultMap="UserResultMap">
		select
		<include refid="Base_Column_List" />
		from users
	</select>
	<select id="getAllUsersByName" resultMap="UserResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from users
		where name = #{name,jdbcType=VARCHAR}
	</select>
	<select id="getAllUserByState" resultMap="UserResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from users
		where state = #{state,jdbcType=INTEGER}
	</select>
	<delete id="deleteUserById" parameterType="java.lang.Integer">
		delete from users
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<update id="deleteByState" parameterType="java.util.List">
		update users
		set state = 0 
		where id in
		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
               #{item}       
       </foreach> 
	</update>
	
	
	<insert id="insert" parameterType="com.model.Users">
		insert into users (id, name,
		full_name,
		sex, birthday, password,
		level, state, des,
		tel, email,
		creat_time,
		last_time)
		values (#{id,jdbcType=INTEGER},
		#{name,jdbcType=VARCHAR},
		#{fullName,jdbcType=VARCHAR},
		#{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{level,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		#{des,jdbcType=VARCHAR},
		#{tel,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
		#{creatTime,jdbcType=TIMESTAMP},
		#{lastTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.model.Users">
		insert into users
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="fullName != null">
				full_name,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="level != null">
				level,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="des != null">
				des,
			</if>
			<if test="tel != null">
				tel,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="creatTime != null">
				creat_time,
			</if>
			<if test="lastTime != null">
				last_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="fullName != null">
				#{fullName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				#{level,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=INTEGER},
			</if>
			<if test="des != null">
				#{des,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				#{tel,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="creatTime != null">
				#{creatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastTime != null">
				#{lastTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.model.Users">
		update users
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="fullName != null">
				full_name = #{fullName,jdbcType=VARCHAR},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="level != null">
				level = #{level,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=INTEGER},
			</if>
			<if test="des != null">
				des = #{des,jdbcType=VARCHAR},
			</if>
			<if test="tel != null">
				tel = #{tel,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="creatTime != null">
				creat_time = #{creatTime,jdbcType=TIMESTAMP},
			</if>
			<if test="lastTime != null">
				last_time = #{lastTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.model.Users">
		update users
		set
		name = #{name,jdbcType=VARCHAR},
		full_name =
		#{fullName,jdbcType=VARCHAR},
		sex = #{sex,jdbcType=VARCHAR},
		birthday =
		#{birthday,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		level = #{level,jdbcType=INTEGER},
		state = #{state,jdbcType=INTEGER},
		des = #{des,jdbcType=VARCHAR},
		tel = #{tel,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		creat_time =
		#{creatTime,jdbcType=TIMESTAMP},
		last_time =
		#{lastTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>





	<select id="checkLogin" resultMap="UserResultMap">
		select
		<include refid="Base_Column_List" />
		from users
		where name = #{name,jdbcType=VARCHAR} 
			AND password = #{password,jdbcType=VARCHAR} 
			AND state = 1 
	</select>
	<select id="getSearchUsers" resultMap="UserResultMap" parameterType="com.model.Users">
		select
		<include refid="Base_Column_List" />
		from users
		<where>
			<if test="name != null and name != '' ">
				AND name LIKE CONCAT('%',#{name},'%')
			</if>
			<if test="fullName != null and fullName != ''">
				AND full_name LIKE CONCAT('%',#{fullName},'%')
			</if>
			<if test="sex != null and sex != ''">
				AND sex LIKE CONCAT('%',#{sex},'%')
			</if>
			<if test="birthday != null and birthday != ''">
				AND birthday LIKE CONCAT('%',#{birthday},'%')
			</if>
			<if test="level != null and level != ''">
				AND level LIKE CONCAT('%',#{level},'%')
			</if>
			<if test="state != null and state != ''">
				AND state LIKE CONCAT('%',#{state},'%')
			</if>
			<if test="des != null and des != ''">
				AND des LIKE CONCAT('%',#{des},'%')
			</if>
			<if test="tel != null and tel != ''">
				AND tel LIKE CONCAT('%',#{tel},'%')
			</if>
			<if test="email != null and email != ''">
				AND email LIKE CONCAT('%',#{email},'%')
			</if>
		</where>
		ORDER BY last_time desc
	</select>


</mapper>